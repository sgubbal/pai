AWSTemplateFormatVersion: '2010-09-09'
Description: 'Personal AI Chatbot - Storage Stack (DynamoDB, S3)'

Parameters:
  Environment:
    Type: String
  EnableRAG:
    Type: String
  KMSKeyId:
    Type: String

Conditions:
  IsRAGEnabled: !Equals [!Ref EnableRAG, "true"]

Resources:
  #######################
  # DynamoDB - Conversations
  #######################
  ConversationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'chatbot-conversations-${Environment}'
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !Ref KMSKeyId
      AttributeDefinitions:
        - AttributeName: conversation_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: conversation_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment

  #######################
  # S3 - Documents (Phase 2)
  #######################
  DocumentsBucket:
    Type: AWS::S3::Bucket
    Condition: IsRAGEnabled
    Properties:
      BucketName: !Sub 'chatbot-documents-${AWS::AccountId}-${Environment}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
              KMSMasterKeyID: !Ref KMSKeyId
      LifecycleConfiguration:
        Rules:
          - Id: IntelligentTiering
            Status: Enabled
            Transitions:
              - TransitionInDays: 0
                StorageClass: INTELLIGENT_TIERING
      Tags:
        - Key: Environment
          Value: !Ref Environment

Outputs:
  ConversationsTableName:
    Value: !Ref ConversationsTable
    Export:
      Name: !Sub '${AWS::StackName}-ConversationsTable'

  DocumentsBucketName:
    Condition: IsRAGEnabled
    Value: !Ref DocumentsBucket
    Export:
      Name: !Sub '${AWS::StackName}-DocumentsBucket'
