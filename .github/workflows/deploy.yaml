name: Deploy to AWS

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  deploy:
    name: Deploy PAI Agent
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Validate CloudFormation templates
        run: |
          for template in infra/cloudformation/*.yaml; do
            echo "Validating $template..."
            aws cloudformation validate-template \
              --template-body file://$template \
              --region ${{ secrets.AWS_REGION || 'us-east-1' }} > /dev/null
          done

      - name: Deploy infrastructure
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
        run: |
          ./scripts/deploy.sh $ENVIRONMENT

      - name: Package Lambda functions
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
        run: |
          ./scripts/package-lambdas.sh $ENVIRONMENT

      - name: Run smoke tests
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
        run: |
          ./scripts/test.sh $ENVIRONMENT

      - name: Get stack outputs
        id: outputs
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
        run: |
          STACK_NAME="pai-agent-${ENVIRONMENT}"
          API_ENDPOINT=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`ApiEndpoint`].OutputValue' \
            --output text)
          echo "api_endpoint=$API_ENDPOINT" >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Deployment successful!\n\nAPI Endpoint: ${{ steps.outputs.outputs.api_endpoint }}`
            })

      - name: Deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Infrastructure deployed successfully" >> $GITHUB_STEP_SUMMARY
          echo "ðŸš€ API Endpoint: ${{ steps.outputs.outputs.api_endpoint }}" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ Environment: ${{ github.event.inputs.environment || 'dev' }}" >> $GITHUB_STEP_SUMMARY
